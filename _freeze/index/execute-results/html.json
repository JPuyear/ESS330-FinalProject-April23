{
  "hash": "872193ff036b225a1f2ef21134974275",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"ESS 330 Final Project: Emissions in the Top CO₂ Polluting Countries Before and After COVID-19\"\nauthor:\n  - name: \"Yazeed Aljohani\"\n    affiliation: \"Colorado State University\"\n  - name: \"Josh Puyear\"\n    affiliation: \"Colorado State University\"\n  - name: \"Cade Vanek\"\n    affiliation: \"Colorado State University\"\ndate: 2025-04-24\"\nbibliography: references.bib\nkeywords: [CO2 emissions, COVID-19, GHG, workflow, ANOVA, sustainability]\nabstract: |\n  This project investigates trends in per capita greenhouse gas (GHG) emissions from the five largest CO2-polluting countries before, during, and after the COVID-19 pandemic. Using `ghg_excluding_lucf_per_capita` as the main [response?] variable, we analyze patterns in emissions and identify key predictors across sectors (e.g., manufacturing, transport). The study applies workflow modeling and ANOVA to examine emission changes and variation across countries. Results will inform strategies to reduce emissions and guide sustainable policy efforts.\nformat:\n  html:\n    code-fold: true\n---\n\n\n\n# Introduction, Background, and Motivation\n\nClimate change remains one of the most urgent global challenges, driven in large part by human greenhouse gas emissions. Among these, carbon dioxide is the most significant. Carbon dioxide is released through many activities such as burning fossil fuels, industrial production, and land-use practices. Even though international efforts like the Paris Agreement have pushed countries to reduce emissions, many continue to show increasing trends. A small group of countries contributes the most emissions globally, both in total and per person. These major contributors include countries like China, the United States, and India [@friedlingstein2019global].\n\nThis project focuses on the five largest carbon dioxide polluting countries: China, the United States, India, Russia, and Japan. These countries are responsible for a significant share of global emissions and reflect a range of economic systems, energy sources, and industrial structures. To allow meaningful comparisons, we center our analysis on greenhouse gas emissions per person, using the variable ghg_excluding_lucf_per_capita. This variable removes land-use change from the emissions total, isolating emissions from industrial activity and fossil fuel use. By using this approach, we can better understand how much pollution is tied to each person’s activity and consumption within each country.\n\nThe COVID-19 pandemic created a global disruption that affected travel, trade, and production. Lockdowns and other restrictions slowed down factories, reduced transportation, and caused shifts in energy use. As a result, global carbon dioxide emissions in 2020 dropped by approximately 5.4 percent, marking the largest single-year decrease in history [@forster2020current]. This sudden drop was mostly due to temporary changes. As countries began reopening in 2021 and 2022, emissions started climbing again.\n\nOur goal is to analyze how emissions changed in these five countries before, during, and after the pandemic. We look at three main periods: before COVID from 2015 to 2019, the year COVID began in 2020, and the early recovery years from 2021 to 2022. By studying per person emissions during these periods, we can see whether there were real shifts in emissions behavior and whether those shifts continued into recovery. We also want to understand what kinds of emissions changed the most. For example, did transportation-related emissions drop more than industrial ones? Did countries with manufacturing-based economies recover differently than those with service-based ones?\n\nTo explore these questions, we use two main methods. First, we build a workflow model using the tidymodels package in R. This lets us see which emission sources are the strongest predictors of overall greenhouse gas output per person. For example, we compare emissions from coal, oil, gas, cement, and other industry sectors. We also include factors like population and economic output. By analyzing these predictors, we can understand which sources matter most in each country and how they are connected to changes over time. Second, we use ANOVA to test whether the changes in emissions across the three time periods are statistically meaningful. We run this analysis for each country and compare their patterns.\n\nThe reason for focusing on per person emissions is that total emissions alone do not tell the full story. Countries with large populations may seem like major polluters in total, but their emissions per person might be lower than smaller, high-emitting countries. A per person view also reflects differences in daily life, energy use, and infrastructure. This is important for climate policy, because it shows whether emissions are driven by large populations, high-intensity consumption, or both.\n\nOur analysis helps link data analysis to climate solutions. By identifying what types of emissions dropped the most during the pandemic and which ones came back quickly, we can suggest where to focus efforts. If, for instance, oil-related emissions dropped during lockdowns but then returned quickly, that might show a need for deeper investment in alternative transportation options. If manufacturing emissions remained stable, that could show how industrial processes are harder to change without long-term plans and policies.\n\nThis project is also a chance to make emissions data more relatable. People often hear that emissions went down during the pandemic, but they may not know what caused the change or how long it lasted. By using clear visuals and country comparisons, we can help explain these trends to wider audiences. This is especially important as the world faces increasing climate-related disasters. Understanding emission trends can support smarter planning and better communication around sustainable transitions.\n\nLastly, we are motivated by a bigger question: what can we learn from this accidental global experiment? The pandemic gave the world a chance to see what happens when daily life suddenly changes. Some of those changes, like working from home or using less transportation, might become long-term habits. Others may disappear as economies reopen. By analyzing which emission reductions lasted and which faded, we can start to imagine more realistic and effective ways to slow down climate change.\n\nAdd to the introduction(Josh):\n\nEnergy-related emissions are an important aspect of analyzing CO2 emission changes before and after COVID because demands for energy will continue. Depending on where the five selected countries obtain fuels for energy generation, energy use plays a role in predicting total CO2 emissions for each country and can present opportunities for reductions in emissions. CO2  emitted per kilowatt-hour can provide insight into how much CO2 can be attributed to energy use.\n\nQuestions (Josh):\n\nWhich variables best predict **per capita CO2 emissions** for the top five cumulative CO2 emitter countries during 2015-2022?\n\nWhich variables best predict **per unit energy CO2 emissions** for the top five cumulative CO2 emitter countries during 2015-2022?\n\n\n# **Data Exploration**\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(dplyr)\n\ndata <- read_csv(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/owid-co2-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 50191 Columns: 79\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): country, iso_code\ndbl (77): year, population, gdp, cement_co2, cement_co2_per_capita, co2, co2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nmeta <- read_csv(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/owid-co2-codebook.csv\")\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nRows: 79 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (4): column, description, unit, source\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n## Narrowing Data to 2015-2022\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndata_filtered <- data |>\n  filter(year >= 2015, year <= 2022) |>\n  filter(!is.na(iso_code) & nchar(iso_code) == 3)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Getting top 5 CO2 emitting countries by total GHG (excluding land use)- This is total cumulative ghg emissions\n\ntop_emitters <- data_filtered |>\n  group_by(country) |>\n  summarise(total_ghg = sum(total_ghg_excluding_lucf, na.rm = TRUE)) |>\n  arrange(desc(total_ghg)) |>\n  slice_head(n = 5) |>\n  pull(country)\n\n# Filtering data to include only those countries and select relevant variables\ndf <- data_filtered |>\n  filter(country %in% top_emitters) |>\n  select(country, year, ghg_excluding_lucf_per_capita,\n         coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Adding period category (pre, during, post COVID)\ndf <- df |>\n  mutate(period = case_when(\n    year <= 2019 ~ \"pre_covid\",\n    year == 2020 ~ \"during_covid\",\n    year >= 2021 ~ \"post_covid\"\n  )) |>\n  mutate(period = factor(period, levels = c(\"pre_covid\", \"during_covid\", \"post_covid\")))\n```\n:::\n\n\n\nPer capita ghg emissions top 5 polluters\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nggplot(df, aes(x = factor(year), y = ghg_excluding_lucf_per_capita, color = country, group = country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \"Per Capita GHG Emissions (Excl. Land Use) by Country (2015–2022)\",\n    x = \"Year\", y = \"GHG per Capita (tCO₂e)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\ndf_long <- df |>\n  pivot_longer(cols = c(coal_co2, gas_co2, oil_co2, cement_co2, other_industry_co2),\n               names_to = \"sector\", values_to = \"emissions\")\n\nggplot(df_long, aes(x = factor(year), y = emissions, color = sector, group = interaction(sector, country))) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ country) +\n  labs(title = \"Sector-specific CO₂ Emissions (2015–2022)\", x = \"Year\", y = \"Emissions (MtCO₂)\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_line()`).\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# Running ANOVA on each country if they have more than one period\nfor (c in unique(df$country)) {\n  df_country <- df |> filter(country == c)\n  if (n_distinct(df_country$period) > 1) {\n    cat(\"\\n--- ANOVA for\", c, \"---\\n\")\n    model <- aov(ghg_excluding_lucf_per_capita ~ period, data = df_country)\n    print(summary(model))\n  } else {\n    cat(\"\\n--- Skipped ANOVA for\", c, \": not enough periods ---\\n\")\n  }\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n--- ANOVA for China ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.2803  0.6402   13.06 0.0103 *\nResiduals    5 0.2451  0.0490                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for India ---\n            Df  Sum Sq  Mean Sq F value Pr(>F)\nperiod       2 0.04456 0.022280   2.956  0.142\nResiduals    5 0.03769 0.007537               \n\n--- ANOVA for Japan ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.6155  0.8077   7.299 0.0329 *\nResiduals    5 0.5533  0.1107                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for Russia ---\n            Df Sum Sq Mean Sq F value Pr(>F)  \nperiod       2 1.3923  0.6961   4.433 0.0781 .\nResiduals    5 0.7852  0.1570                 \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n--- ANOVA for United States ---\n            Df Sum Sq Mean Sq F value  Pr(>F)   \nperiod       2  4.906  2.4529   21.37 0.00355 **\nResiduals    5  0.574  0.1148                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n#### Data Description\n\nWe used data from Our World in Data’s greenhouse gas emissions dataset, which compiles country-level data from sources like the Global Carbon Project and BP Statistical Review [@owid-scaling-up-ai]. The dataset covers emissions from fossil fuels, industry, and land-use change.\n\nFor this project, we focused on the years 2015 to 2022 and selected the top five CO₂-polluting countries: China, the United States, India, Russia, and Japan. We used variables such as:\n\n-   ghg_excluding_lucf_per_capita (our main variable),\n\n-   Sector-based emissions: coal_co2, oil_co2, gas_co2, cement_co2, other_industry_co2.\n\n#### Data Cleaning\n\nWe filtered the dataset to include:\n\n-   Only rows with valid ISO country codes\n\n-   Only years 2015–2022\n\n-   The top 5 countries based on total GHG emissions (excluding land-use change)\n\nWe also created a period variable to group data into pre-COVID (2015–2019), during COVID (2020), and post-COVID (2021–2022). This helped us compare emissions trends across time. Minimal cleaning was needed beyond this filtering and labeling.\n\n# Methods (Josh)\n\n  Our research focuses on revealing relationships between countries and between predictor variables of greenhouse emissions. The dataset from Oxford's Our World in Data includes emissions levels from the industrial revolution up to 2023 and is a robust dataset. The dataset is publicly posted to https://ourworldindata.org/co2-and-greenhouse-gas-emissions. To compare CO2 emissions before, during, and after the pandemic, we will be using the tidymodels package in R along with dplyr. We will make this comparison by comparing transportation and industrial emissions, then comparing total emissions from five key predictor categories including coal, oil, gas, cement and other. Our main response will be ghg_excluding_lucf_per_capita, but other measures of CO2 will also be explored. We will be testing predictor variables with linear regression, neural network, random forest, decision tree, and boost tree models to find predictor variables.\n\n  Restrictions to public and economic activity during the 2020-2021 COVID lockdown period prevented people from leaving their houses to consume goods and do business, activities that would under normal circumstances indirectly result in more greenhouse gas emissions. This study refers to The Oxford COVID-19 Government Response Tracker (OxCGRT) for public and economic restriction indices in the five focus countries. Differences in average restriction index for each country were tested with ANOVA. We used the ggplot2 package to visualize COVID-19 restrictions as well as visualizing data from the CO2 and Greenhouse Gas emissions data by Ritchie, Rosado and Roser. \n  The proportion of per capita emissions from the top five cumulative CO2  emitting countries to the full record of countries during the 2015-2022 period revealed the impact that these countries can have to curb CO2 emissions in the future. Then, we used CO2 per unit energy emissions in 2015-2022 to illustrate how energy, a constant necessity, contributes to the carbon footprint of these countries. The predictor variables gdp_percap, gas_co2_per_capita, share_global_coal_co2, coal_co2_per_capita, cumulative_luc_co2, oil_co2_per_capita, and share_global_luc_co2 (Table 1) were chosen to model CO2 emissions per unit energy. The ggplot packages rsample, parsnip, baguette, and workflowsets were used to test multiple models over the dataset to build a regression model. The best model was analyzed with the vip package to reveal the most explanatory variables that predicted CO2 emissions per unit energy from the selected variables.\n\n**Table 1.** Predictor variables for CO2 emitted per kilowatt-hour\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeta %>% \n  filter(column %in% c(\"gdp_percap\", \"gas_co2_per_capita\", \"share_global_coal_co2\", \"coal_co2_per_capita\", \"cumulative_luc_co2\", \"oil_co2_per_capita\", \"share_global_luc_co2\")) %>% \n  print()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 4\n  column                description                                 unit  source\n  <chr>                 <chr>                                       <chr> <chr> \n1 coal_co2_per_capita   Annual CO₂ emissions from coal (per capita… tonn… Globa…\n2 cumulative_luc_co2    Cumulative CO₂ emissions from land-use cha… mill… Globa…\n3 gas_co2_per_capita    Annual CO₂ emissions from gas (per capita)… tonn… Globa…\n4 oil_co2_per_capita    Annual CO₂ emissions from oil (per capita)… tonn… Globa…\n5 share_global_coal_co2 Share of global annual CO₂ emissions from … %     Globa…\n6 share_global_luc_co2  Share of global annual CO₂ emissions from … %     Globa…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#include a table of variables and their meaning (reference df above)\n# copy metadata from orig proj to here\n#names(df)\n```\n:::\n\n\n## Understanding Public Restrictions\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(readr)\nlibrary(readxl)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#loading all dataset\ngovres <- read_excel(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/Gov_Responses2Covid19_last.xlsx\", sheet = \"Dataset\")\n\ngovresdes<- read_excel(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/Gov_Responses2Covid19_last.xlsx\", sheet = \"Description\")\n\ngovres_econ <- read_excel(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/Gov_Responses_Sources.xlsx\", sheet = \"Econ sources\")\n\ngovres_pubhealth <- read_excel(\"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/data/Gov_Responses_Sources.xlsx\", sheet = \"Public health sources\")\n\n#View(govres)\n#View(govres_source)\n#view(govresdes)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#names(govres)\n#summary(govres)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Getting top 5 CO2 emitting countries by total GHG (excluding land use)\n\n#filter to top 5 countries\n\n#need to actually just select for the five most ghg emitting countries\ntop_emitters_res <- govres |>\n  group_by(country) |>\n  filter(country %in% c(\"China\", \"India\", \"Russia\", \"United States of America\", \"Japan\"))\n\n# Filtering data to include only those countries and select relevant variables\ndf2 <- top_emitters_res %>% \n  select(country, date, Rigidity_Public_Health, Economic_Measures) %>% \n  mutate(Public = as.numeric(Rigidity_Public_Health)) %>% \n  mutate(Economic = as.numeric(Economic_Measures)) %>% \n  select(!c(Rigidity_Public_Health, Economic_Measures))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf2_long <- df2 |>\n  pivot_longer(cols = c(Public, Economic),\n               names_to = \"Restriction\", values_to = \"Rigidity\") %>% \n  mutate(Date = as.Date(date))\n\n#making a faceted plot\nggplot(df2_long, aes(x = Date, y = Rigidity, color = Restriction, group = interaction(Restriction, country))) +\n    theme(\n    axis.text.x = element_text(size = 6, angle = 60, hjust = 1),  # Remove extra comma here\n    plot.margin = margin(t = 10, r = 10, b = 60, l = 10)\n  ) +\n  scale_x_date(date_labels = \"%b %Y\", \n               date_breaks = \"3 months\") +\n  scale_y_continuous(limits = c(0, 1)) +\n  geom_line() +\n  geom_point() +\n  facet_wrap(~ country) +\n  labs(title = \"Restrictions During COVID's Lockdown\", x = \"Date\", y = \"Restriction Index\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n\n```{.r .cell-code}\nggsave(\"countryrestrict.pdf\", plot = last_plot(), path = \"C:/Users/Joshua Puyear/Documents/csu-undergrad/ess-330-joshp-2025/github/ESS-330-FinalProject-April23/imgs\", width = 12, height = 6)\n```\n:::\n\n\n**Figure 1.** Daily COVID lockdown restriction indices (Oxford, 2022), separated by Economic and Public.\n\n**Public Restriction Indices**\nThere is a statistically significant difference (p < 0.000) in both economic and public restriction index for the top 5 biggest cumulative CO2 emitters (Figure 1). The United States has significantly lower public restrictions (p < 0.000) than every other country except China, where its public restrictions are similar (p = .3660).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(car)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nLoading required package: carData\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'car'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:dplyr':\n\n    recode\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:purrr':\n\n    some\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#shapiro test for Public restrictions\nnormspub <- df2 |> \n  nest(data = -country) |>\n  mutate(\n    Shapiro = map(data, ~ shapiro.test(na.omit(.x$Public))),  # Remove NAs before applying shapiro.test\n    n = map_dbl(data, nrow),\n    glance_shapiro = map(Shapiro, broom::glance)\n  ) |>\n  unnest(glance_shapiro)\n\nflextable::flextable(dplyr::select(normspub, country, n, statistic, p.value)) |>\n  flextable::set_caption(\"Shapiro-Wilk normality test for restrictions in each country\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-0faca4c6{}.cl-0f99d5e4{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-0fa13776{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0fa1378a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0fa17a74{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fa17a88{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fa17a89{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fa17a92{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fa17aa6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fa17aa7{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-0faca4c6'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-0fa17a74\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">country</span></p></th><th class=\"cl-0fa17a88\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">n</span></p></th><th class=\"cl-0fa17a88\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">statistic</span></p></th><th class=\"cl-0fa17a88\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">p.value</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fa17a89\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">China</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">521</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.7140077</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.00000000000000000000000000007276880219</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fa17a89\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">India</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">521</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.6312080</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.00000000000000000000000000000006443471</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fa17a89\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">Japan</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">521</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.9335874</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.00000000000001859985352188436037723651</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fa17a89\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">Russia</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">521</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.8302978</span></p></td><td class=\"cl-0fa17a92\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.00000000000000000000004190057782746653</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fa17aa6\"><p class=\"cl-0fa13776\"><span class=\"cl-0f99d5e4\">United States of America</span></p></td><td class=\"cl-0fa17aa7\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">521</span></p></td><td class=\"cl-0fa17aa7\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.6186642</span></p></td><td class=\"cl-0fa17aa7\"><p class=\"cl-0fa1378a\"><span class=\"cl-0f99d5e4\">0.00000000000000000000000000000002486007</span></p></td></tr></tbody></table></div>\n```\n\n:::\n\n```{.r .cell-code .hidden}\n#the public restriction dates of lockdown are not normally distributed\n\n#testing economic restrictions\nnormsec <- df2 |> \n  nest(data = -country) |>\n  mutate(\n    Shapiro = map(data, ~ shapiro.test(na.omit(.x$Economic))),  # Remove NAs before applying shapiro.test\n    n = map_dbl(data, nrow),\n    glance_shapiro = map(Shapiro, broom::glance)\n  ) |>\n  unnest(glance_shapiro)\n\nflextable::flextable(dplyr::select(normsec, country, n, statistic, p.value)) |>\n  flextable::set_caption(\"Shapiro-Wilk normality test for restrictions in each country\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-0fdca568{}.cl-0fcbf9fc{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-0fd26d32{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0fd26d46{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-0fd2a748{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fd2a75c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fd2a766{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fd2a767{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fd2a770{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-0fd2a77a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-0fdca568'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-0fd2a748\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">country</span></p></th><th class=\"cl-0fd2a75c\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">n</span></p></th><th class=\"cl-0fd2a75c\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">statistic</span></p></th><th class=\"cl-0fd2a75c\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">p.value</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fd2a766\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">China</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">521</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.3847361</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.00000000000000000000000000000000000001491383</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fd2a766\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">India</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">521</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.5660964</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.00000000000000000000000000000000059191545477</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fd2a766\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">Japan</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">521</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.5591909</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.00000000000000000000000000000000037233102278</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fd2a766\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">Russia</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">521</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.6979087</span></p></td><td class=\"cl-0fd2a767\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.00000000000000000000000000001652274757775360</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-0fd2a770\"><p class=\"cl-0fd26d32\"><span class=\"cl-0fcbf9fc\">United States of America</span></p></td><td class=\"cl-0fd2a77a\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">521</span></p></td><td class=\"cl-0fd2a77a\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.4565808</span></p></td><td class=\"cl-0fd2a77a\"><p class=\"cl-0fd26d46\"><span class=\"cl-0fcbf9fc\">0.00000000000000000000000000000000000069767096</span></p></td></tr></tbody></table></div>\n```\n\n:::\n\n```{.r .cell-code .hidden}\n#economic restriction dates aren't normally distributed either\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#testing for statistical significance in differences between indices for how countries handled the lockdown\n\nkruskal.test(Public ~ country, data = df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  Public by country\nKruskal-Wallis chi-squared = 1154.8, df = 4, p-value < 2.2e-16\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\nkruskal.test(Economic ~ country, data = df2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tKruskal-Wallis rank sum test\n\ndata:  Economic by country\nKruskal-Wallis chi-squared = 1189.2, df = 4, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\npost-hoc test to see which ones are different\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n# using Dunn's test to see which variables are different\nlibrary(dunn.test)\n# Perform Dunn's Test for pairwise comparisons\ndunn.test(df2$Public, g = df2$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Kruskal-Wallis rank sum test\n\ndata: x and group\nKruskal-Wallis chi-squared = 1154.8228, df = 4, p-value = 0\n\n                           Comparison of x by group                            \n                                (No adjustment)                                \nCol Mean-|\nRow Mean |      China      India      Japan     Russia\n---------+--------------------------------------------\n   India |  -13.02502\n         |    0.0000*\n         |\n   Japan |   19.77441   32.79944\n         |    0.0000*    0.0000*\n         |\n  Russia |   7.398060   20.42308  -12.37635\n         |    0.0000*    0.0000*    0.0000*\n         |\nUnited S |  -0.342397   12.68262  -20.11681  -7.740458\n         |     0.3660    0.0000*    0.0000*    0.0000*\n\nalpha = 0.05\nReject Ho if p <= alpha/2\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\ndunn.test(df2$Economic, g = df2$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Kruskal-Wallis rank sum test\n\ndata: x and group\nKruskal-Wallis chi-squared = 1189.222, df = 4, p-value = 0\n\n                           Comparison of x by group                            \n                                (No adjustment)                                \nCol Mean-|\nRow Mean |      China      India      Japan     Russia\n---------+--------------------------------------------\n   India |   18.28142\n         |    0.0000*\n         |\n   Japan |   19.78936   1.507937\n         |    0.0000*     0.0658\n         |\n  Russia |   6.583489  -11.69793  -13.20587\n         |    0.0000*    0.0000*    0.0000*\n         |\nUnited S |  -8.959188  -27.24061  -28.74855  -15.54267\n         |    0.0000*    0.0000*    0.0000*    0.0000*\n\nalpha = 0.05\nReject Ho if p <= alpha/2\n```\n\n\n:::\n:::\n\n\nResults:\nThe United States has significantly lower public restrictions (p < 0.000) than every other country except China.\n\nProportion of CO2 emitted by top 5 countries in 2022\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#for all greenhouse gases\ntotal_emissions <- data %>% \n  select(total_ghg, year, country, iso_code) %>%\n  filter(!is.na(iso_code)) %>% \n  group_by(country, na.rm = TRUE) %>% \n  filter(year == 2022) %>% \n  ungroup()\n\n#in the five most polluting countries\ntotem1 <- total_emissions %>% \n  filter(country %in% c(\"United States\", \"China\", \"India\", \"Japan\", \"Russia\")) %>% \n  summarize(sum(total_ghg))\n\n#in the rest of the world\ntotem2 <- total_emissions %>% \n  filter(!country %in% c(\"United States\", \"China\", \"India\", \"Japan\", \"Russia\")) %>% \n  summarize(sum(total_ghg, na.rm = TRUE))\n\n27168.36 / (27168.36 + 26138.06)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.5096639\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#for co2_excluding_luc_per_capita\npercap_emissions <- data %>% \n  select(ghg_excluding_lucf_per_capita, year, country, iso_code) %>%\n  filter(!is.na(iso_code)) %>% \n  group_by(country, na.rm = TRUE) %>% \n  filter(year == 2022) %>% \n  ungroup()\n\n#in the five most polluting countries\ntotemcap1 <- percap_emissions %>% \n  filter(country %in% c(\"United States\", \"China\", \"India\", \"Japan\", \"Russia\")) %>% \n  summarize(mean(ghg_excluding_lucf_per_capita))\n\n#in the rest of the world\ntotemcap2 <- percap_emissions %>% \n  filter(!country %in% c(\"United States\", \"China\", \"India\", \"Japan\", \"Russia\")) %>% \n  summarize(mean(ghg_excluding_lucf_per_capita, na.rm = TRUE))\n```\n:::\n\n\n\nResults\nThe top five biggest co2 emitted of the world emitted a total of 27168.36 million metric tons of greenhouse gases in 2022. That year, the other 213 countries emitted metric tons of greenhouse gasses, meaning 50.97 percent of greenhouse gas emissions come from the top 5 most polluting countries. The mean emissions per capita in the top 5 biggest greenhouse gas emitters was 10.45 CO2 equivalents versus a mean of only 5.59 CO2 equivalents for the rest of the countries.\n\n## CO2 per Unit Energy Modeling\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#co2_per_unit_energy\n \ndf3 <- data_filtered %>% \n  group_by(country) %>% \n  filter(country %in% c(\"China\", \"India\", \"Russia\", \"United States\", \"Japan\")) %>%\n  select(country, year, co2_per_unit_energy,\n         ghg_excluding_lucf_per_capita) %>% \n  mutate(percap = ghg_excluding_lucf_per_capita, energy = co2_per_unit_energy)\n\n\nggplot(df3, aes(x = factor(year), y = co2_per_unit_energy, color = country, group = country)) +\n  geom_line() +\n  geom_point() +\n  labs(\n    title = \" 2015 - 2022 CO2 per kilowatt-hour emissions\",,\n    x = \"Year\", y = \"CO2 produced per kwh emissions\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n**Figure 2.** CO2 per kilowatt-hour emissions for the top five cumulative emitters.\n\n**Proportion of CO2  emitted by the five selected countries**\nIn 2022, India and Russia’s CO2 emissions per kilowatt-hour have risen, while China, the United States, and Japan’s emissions have decreased. (Figure 2.) The top five biggest co2 emitted of the world emitted a total of 27168.36 million metric tons of greenhouse gases in 2022. That year, the other 213 countries emitted metric tons of greenhouse gasses, meaning 50.97 percent of greenhouse gas emissions come from the top 5 most polluting countries. The mean emissions per capita in the top 5 biggest greenhouse gas emitters was 10.45 CO2 equivalents versus a mean of only 5.59 CO2 equivalents for the rest of the countries.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\n#shapiro test for Public restrictions\nnormspub2 <- df3 |> \n  nest(data = -country) |>\n  mutate(\n    Shapiro = map(data, ~ shapiro.test(na.omit(.x$energy))),  # Remove NAs before applying shapiro.test\n    n = map_dbl(data, nrow),\n    glance_shapiro = map(Shapiro, broom::glance)\n  ) |>\n  unnest(glance_shapiro)\n\nflextable::flextable(dplyr::select(normspub2, country, n, statistic, p.value)) |>\n  flextable::set_caption(\"Shapiro-Wilk normality test for energy consumption in each country\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-10cebd62{}.cl-10be8d66{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-10c4f426{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-10c4f43a{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-10c52e14{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-10c52e28{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-10c52e29{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-10c52e32{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-10c52e3c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-10c52e3d{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-10cebd62'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-10c52e14\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">country</span></p></th><th class=\"cl-10c52e28\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">n</span></p></th><th class=\"cl-10c52e28\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">statistic</span></p></th><th class=\"cl-10c52e28\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">p.value</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-10c52e29\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">China</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">8</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9880975</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9915808</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-10c52e29\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">India</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">8</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9287910</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.5051372</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-10c52e29\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">Japan</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">8</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9407402</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.6183777</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-10c52e29\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">Russia</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">8</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9249849</span></p></td><td class=\"cl-10c52e32\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.4716001</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-10c52e3c\"><p class=\"cl-10c4f426\"><span class=\"cl-10be8d66\">United States</span></p></td><td class=\"cl-10c52e3d\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">8</span></p></td><td class=\"cl-10c52e3d\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.9545535</span></p></td><td class=\"cl-10c52e3d\"><p class=\"cl-10c4f43a\"><span class=\"cl-10be8d66\">0.7569171</span></p></td></tr></tbody></table></div>\n```\n\n:::\n\n```{.r .cell-code .hidden}\n#This table is giving normal distribution for the p-values, so we'll do ANOVA\n```\n:::\n\n\n\nANOVA for co2 emissions per unit energy\n\n\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\n\nres_aov <- aov(formula = co2_per_unit_energy ~ country, data = df3)\n\n#making sure residuals have a normal distribution\ngghistogram(res_aov$residuals)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nshapiro.test(res_aov$residuals)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  res_aov$residuals\nW = 0.98372, p-value = 0.8234\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#p-value is .8234, so the data fit a normal distribution\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code .hidden}\nlibrary(ggpubr)\nnorm_usa <- df3 %>% group_by(country) %>% \nfilter(country == \"United States\")\n\ngghistogram(norm_usa$energy)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nWarning: Using `bins = 30` by default. Pick better value with the argument\n`bins`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n\n```{.r .cell-code .hidden}\nshapiro.test(df3$energy)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tShapiro-Wilk normality test\n\ndata:  df3$energy\nW = 0.8199, p-value = 1.81e-05\n```\n\n\n:::\n\n```{.r .cell-code .hidden}\n#it was strange how high the p-values were for the shapiro.test so I wanted to make a histogram. The USA histogram doesn't appear to have a normal distribution\n```\n:::\n\n\n\n\np-values from ANOVA\n\n**Table 2.** Summary statistics of an ANOVA analysis of CO2 emitted per kilowatt-hour for the top 5 cumulative CO2 emitters.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(aov(formula = co2_per_unit_energy ~ country, data = df3))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            Df  Sum Sq  Mean Sq F value Pr(>F)    \ncountry      4 0.04592 0.011480   297.1 <2e-16 ***\nResiduals   35 0.00135 0.000039                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n**Difference in CO2  per kilowatt-hour emissions between countries**\nThere is a statistically significant difference (p < 0.000) in CO2 per kilowatt-hour for the top 5 biggest cumulative CO2 emitters (Table 2). \n\n\n## Predicting CO2 Emissions per unit Energy\n\nMutate data, check for Interaction terms\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#set a seed\nset.seed(341)\n\n#doing a correlation test for variables\n1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n\n```{.r .cell-code}\nghg_per_eny <- data_filtered %>% \n  mutate(period = case_when(\n    year <= 2019 ~ \"pre_covid\",\n    year == 2020 ~ \"during_covid\",\n    year >= 2021 ~ \"post_covid\"\n  )) %>% \n  group_by(country) %>% \n  mutate(gdp_percap = gdp/population) %>% \n  ungroup() %>% \nselect(co2_per_unit_energy, share_global_luc_co2,\ngas_co2_per_capita, oil_co2_per_capita, gdp_percap, coal_co2_per_capita, share_global_coal_co2, cumulative_luc_co2, share_global_luc_co2) %>%\n  drop_na\n\n# cor(ghg_per_eny)\n```\n:::\n\n\nNone of the variables had strong enough correlations to make interaction terms.\n\n## making testing and training data for energy consumption\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#find recipe format from lab 6 / model daily assignments\nlibrary(rsample)\n\nghg_per_eny_split <- initial_split(ghg_per_eny, prop = .8)\nghg_per_eny_train <- training(ghg_per_eny_split)\nghg_per_eny_test  <- testing(ghg_per_eny_split)\n\n\nghg_per_eny_cv <- vfold_cv(ghg_per_eny, v = 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#attempted recipe format\nlibrary(recipes)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n\nAttaching package: 'recipes'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stringr':\n\n    fixed\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\nThe following object is masked from 'package:stats':\n\n    step\n```\n\n\n:::\n\n```{.r .cell-code}\nrec_energy <- recipe(co2_per_unit_energy ~\ngas_co2_per_capita + oil_co2_per_capita + gdp_percap + coal_co2_per_capita + share_global_coal_co2 + cumulative_luc_co2 + share_global_luc_co2, data = ghg_per_eny) %>%\n  step_naomit(all_predictors(), all_outcomes())\n\n#ok, it's not worth logging any of these predictors because the models I'm making don't require normal distributions\n```\n:::\n\n\n\nMaking different models to test against\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#making the models\nlibrary(parsnip)\n\nboost <- boost_tree() %>%\n  # define the engine\n  set_engine(\"xgboost\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\nnnet <- bag_mlp() %>%\n  # define the engine\n  set_engine(\"nnet\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\ndtree <- decision_tree() %>%\n  # define the engine\n  set_engine(\"rpart\") %>%\n  # define the mode\n  set_mode(\"regression\")\n\nrf <- rand_forest(\n  mtry = 5,\n  trees = 1000,\n  min_n = 5\n) %>%\n  set_engine(\"ranger\", importance = \"impurity\") %>%  # <-- ADD THIS\n  set_mode(\"regression\")\n```\n:::\n\n\n\nPlotting the best predictive models of emissions per unit energy\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(workflowsets)\nlibrary(baguette)\n\nwf <-  workflow_set(list(rec_energy), \n                  list(boost,\n                       nnet,\n                       dtree,\n                       rf)) %>%\n  workflow_map('fit_resamples', resamples = ghg_per_eny_cv) \n\nautoplot(wf)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n**Figure 4.** Ranking different models' root mean squared error and R-squared error values, tested against CO2 per kilowatt hour emissions data for the top five cumulative CO2 emitters.\n\nResults:\n\nThe graph shows that random forest is the best model for predicting carbon emissions per unit energy.\n\n\n**Table 3.** Ranking Model Testing Results\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrank_results(wf, rank_metric = \"rsq\", select_best = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 8 × 9\n  wflow_id         .config .metric   mean std_err     n preprocessor model  rank\n  <chr>            <chr>   <chr>    <dbl>   <dbl> <int> <chr>        <chr> <int>\n1 recipe_rand_for… Prepro… rmse    0.0173 9.43e-4    10 recipe       rand…     1\n2 recipe_rand_for… Prepro… rsq     0.925  7.19e-3    10 recipe       rand…     1\n3 recipe_boost_tr… Prepro… rmse    0.0205 8.33e-4    10 recipe       boos…     2\n4 recipe_boost_tr… Prepro… rsq     0.891  9.56e-3    10 recipe       boos…     2\n5 recipe_decision… Prepro… rmse    0.0366 1.64e-3    10 recipe       deci…     3\n6 recipe_decision… Prepro… rsq     0.645  2.40e-2    10 recipe       deci…     3\n7 recipe_bag_mlp   Prepro… rmse    0.0590 1.77e-3    10 recipe       bag_…     4\n8 recipe_bag_mlp   Prepro… rsq     0.120  2.52e-2    10 recipe       bag_…     4\n```\n\n\n:::\n:::\n\n\n\nThe random forest does best in this situation to model ghg emissions per unit energy\n\n### Making a workflow to predict ghg emitted per kilowatt-hour\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.3.0 ──\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n✔ broom     1.0.7     ✔ tune      1.3.0\n✔ dials     1.4.0     ✔ workflows 1.2.0\n✔ infer     1.0.7     ✔ yardstick 1.3.2\n✔ modeldata 1.4.0     \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr .hidden}\n\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ scales::discard() masks purrr::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ recipes::fixed()  masks stringr::fixed()\n✖ dplyr::lag()      masks stats::lag()\n✖ dials::prune()    masks rpart::prune()\n✖ car::recode()     masks dplyr::recode()\n✖ xgboost::slice()  masks dplyr::slice()\n✖ car::some()       masks purrr::some()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n```\n\n\n:::\n\n```{.r .cell-code}\nrf_wf <- workflow() %>%\n  # Add the recipe\n  add_recipe(rec_energy) %>%\n  # Add the model\n  add_model(rf) %>%\n  # Fit the model to the training data\n  fit(data = ghg_per_eny_train) \n\nrf_data <- augment(rf_wf, new_data = ghg_per_eny_test)\n\ndim(rf_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 158   9\n```\n\n\n:::\n:::\n\n\n\nfinding the most statistically significant predictors\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrf_model <- extract_fit_engine(rf_wf)\nvip::vip(rf_model)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n**Figure 5.** Ranking importance of each predictor variable at explaining CO2 emissions per kilowatt-hour in the random forest model selected for analysis.\n\n**Predictor variables for CO2  per kilowatt-hour**\nThe graph shows that random forest is the best model for predicting carbon emissions per unit energy, with an R-squared of 0.91. (Figure 4). The most explanatory variable for predicting CO2 emissions per unit of energy consumption during the the 2015 to 2022 period in the five countries examined was GDP per capita followed by CO2 emitted from gas per capita (Figure 5).\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/tabwid-1.1.3/tabwid.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}